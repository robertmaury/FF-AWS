name: Firefly Terraform Run

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'
        
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
          terraform_wrapper: false
          terraform_version: "1.6.5"

    - name: Terraform Init
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init

    - name: Terraform Plan
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        terraform plan -out tf.plan
        terraform show -json tf.plan > plan.json

    - name: Firefly Post-Plan
      run: |
        curl -O https://gofirefly-prod-iac-ci-cli-binaries.s3.amazonaws.com/fireflyci/latest/fireflyci_Linux_x86_64.tar.gz
        tar -xf fireflyci_Linux_x86_64.tar.gz
        chmod a+x fireflyci
        ./fireflyci post-plan -f plan.json --timeout 180 --access-key ${{ secrets.FIREFLY_ACCESS_KEY }} --secret-key ${{ secrets.FIREFLY_SECRET_KEY }}

    # - name: Terraform Apply
        # env:
        #   AWS_REGION: ${{ secrets.AWS_REGION }}
        #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   id: apply
    #   run: |
    #     terraform apply --auto-approve -json > apply_log.jsonl
    #   continue-on-error: true
      

    # - name: Firefly Post-Apply
    #   if: needs.setup.outputs.apply == 'true' && (steps.changed-files-in-workspace.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch')
    #   run: |
    #     ./fireflyci post-apply -f apply_log.jsonl --timeout 180 --access-key ${{ secrets.FIREFLY_ACCESS_KEY }} --secret-key ${{ secrets.FIREFLY_SECRET_KEY }}
